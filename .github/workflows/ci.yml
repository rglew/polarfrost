name: Python CI with Coverage

on:
  push:
    branches: [ main ]
    # Only ignore non-code files
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'
      - 'docs/**'
      - 'examples/**'
  pull_request:
    branches: [ main ]
  schedule:
    # Weekly on Sunday at 00:00 AEST
    - cron: '0 14 * * 6'

# Cancel in-progress runs for pull requests when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pyspark-version: ['3.5.1']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.11.13"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pyspark==3.5.1

    - name: Run test suite with coverage
      run: |
        python -m pytest tests/ -v \
          --cov=./ \
          --cov-report=xml \
          --cov-report=term \
          --durations=10 \
          --cov-fail-under=50
    
    - name: Install mypy dependencies
      run: |
        # Install type stubs with pinned versions
        pip install pandas-stubs==2.2.3.250527 pyspark-stubs==3.0.0.post3 types-pytz==2025.2.0.20250516
        
    - name: Run mypy
      run: |
        # Run mypy with the same configuration as locally
        mypy polarfrost/ tests/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  lint:
    name: Lint with pre-commit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11.13"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install pyspark==3.5.1

    - name: Run pre-commit
      run: |
        # Only run flake8 through pre-commit (mypy is run separately in the test job)
        pre-commit run --all-files flake8

  # Type checking is now part of the test job to match local workflow

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: [test, lint]  # Removed type-check as it's now part of test job
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11.13"

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        pip install pyspark==3.5.1

    - name: Build package
      run: |
        python -m build

    - name: Verify package
      run: |
        twine check --strict dist/*

    - name: Upload artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
 